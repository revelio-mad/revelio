name: Build and release

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    name: Run ${{ matrix.tool.name }}
    strategy:
      matrix:
        tool:
          - { name: pre-commit, args: pre-commit run --all-files --show-diff-on-failure }
          - { name: isort, args: isort --check-only --diff . }
          - { name: black, args: black --check --diff . }
          - { name: flake8, args: flake8 . }
          - { name: pylint, args: pylint src/revelio/** }
          - { name: mypy, args: mypy . }
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
      - name: Cache pre-commit hooks
        uses: ./.github/actions/cache-pre-commit
      - name: Run ${{ matrix.tool.name }}
        run: ${{ matrix.tool.args }}
  test:
    name: Test
    needs: [lint]
    strategy:
      matrix:
        os: [ubuntu-22.04]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
      - name: Cache tox environments
        uses: actions/cache@v4
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
      - name: Run tests
        run: tox -e $(echo "py${{ matrix.python-version }}" | tr -d .)
  release:
    name: Release
    needs: [test]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - name: Setup revelio-bot
        id: revelio-bot
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.REVELIO_BOT_APP_ID }}
          private_key: ${{ secrets.REVELIO_BOT_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.revelio-bot.outputs.token }}
          fetch-depth: 0
      - name: Release
        run: |
          npm install
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.revelio-bot.outputs.token }}
  outcome:
    name: Build and release outcome
    runs-on: ubuntu-22.04
    needs: [lint, test, release]
    if: always()
    steps:
      - name: Verify there are no failed or cancelled jobs
        run: jq --exit-status 'all(.result == "success" or .result == "skipped")' <<< '${{ toJson(needs) }}'
